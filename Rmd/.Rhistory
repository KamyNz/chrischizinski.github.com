obs.parties.all<-bipartite.projection(caught.inc)[[1]]
obs.spp.all<-bipartite.projection(caught.inc)[[2]]
obs.spp.all
obs.parties.all
fr.all<-layout.fruchterman.reingold(obs.spp.all)
plot(obs.sg.all, obs.spp.all, layout=fr.all, edge.width=E(obs.spp.all)$weight*0.25, vertex.label=V(obs.spp.all)$name,vertex.label.color="blue")
obs.all.fr<-plot(obs.spp.all,layout=fr,edge.color="black",edge.width=E(obs.spp.all)$weight*0.1,vertex.label=V(obs.spp.all)$name,main="Wildwood All Anglers")
fr.all<-layout.fruchterman.reingold(obs.spp.all)
obs.all.fr<-plot(obs.spp.all,layout=fr.all,edge.color="black",edge.width=E(obs.spp.all)$weight*0.1,vertex.label=V(obs.spp.all)$name,main="Wildwood All Anglers")
obs.all.fr<-plot(obs.spp.all,layout=fr.all,edge.color="black",edge.width=E(obs.spp.all)$weight*0.1,vertex.label=V(obs.spp.all)$name,main="Harlan All Anglers")
obs.sg.all<-fastgreedy.community(obs.spp.all,weights=E(obs.spp.all)$weight)
fr.all<-layout.fruchterman.reingold(obs.spp.all)
plot(obs.sg.all, obs.spp.all, layout=fr.all, edge.width=E(obs.spp.all)$weight*0.25, vertex.label=V(obs.spp.all)$name,vertex.label.color="blue")
g<- get.edgelist(obs.all.fr)
obs.all.fr<-plot(obs.spp.all,layout=fr.all,edge.color="black",edge.width=E(obs.spp.all)$weight*0.1,vertex.label=V(obs.spp.all)$name,main="Harlan All Anglers")
obs.all.fr
str(obs.all.fr)
g<- get.edgelist(obs.spp.all)
g<- as.data.frame(get.edgelist(obs.spp.all))
head(g)
E(obs.spp.all)
E(obs.spp.all)$weight
g<- as.data.frame(E(obs.spp.all))
summary( E(obs.spp.all))
unclass( E(obs.spp.all))
g<- get.data.frame(obs.spp.all)
g
g<- get.data.frame(obs.spp.all,what="both")
g
fr.all
fr.all.df<-as.data.frame(fr.all)
fr.all.df
ggplot() +
geom_point(data=fr.all.df,aes(x=V1,y=V2))
library(ggplot2)
ggplot() +
geom_point(data=fr.all.df,aes(x=V1,y=V2))
head(obs.spp.all)
fr.all.df
bipartite.projection(caught.inc)[[2]]
obs.spp.all
caught.inc
head(caught.wide.2)
fr.all.df$species<-colnames(caught.wide.2)
fr.all.df
source('D:/DataDepot/R/themes.R')
ggplot() +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=10,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_maps()
ggplot() +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=10,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
library(ggplot2)
library(grid)
library(scales)
ggplot() +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=10,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
ggplot() +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=10,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
ggplot() +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=15,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
get.data.frame(obs.spp.all,what="both")
g<- get.data.frame(obs.spp.all)
fr.all.df
g
match[g$from,fr.all.df$species]
fr.all.df$species
g$from
match(g$from,fr.all.df$species)
fr.all.df$V1[match(g$from,fr.all.df$species)]
g$from.x<-fr.all.df$V1[match(g$from,fr.all.df$species)]
g$from.y<-fr.all.df$V2[match(g$from,fr.all.df$species)]
g
g$to.x<-fr.all.df$V1[match(g$to,fr.all.df$species)]
g$to.y<-fr.all.df$V2[match(g$to,fr.all.df$species)]
g
ggplot() +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=15,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y)) +
theme_map()
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y)) +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=15,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
g
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y)) +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=15,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species),size=weight) +
theme_map()
g
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y)) +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=15,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species),size=weight) +
theme_map()
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y)) +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=15,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species,size=weight)) +
theme_map()
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight)) +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=15,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight),colour="grey") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=15,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight),colour="dodgerblue") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=15,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight),colour="dodgerblue") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=20,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight),colour="dodgerblue") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=20,colour="lightgrey") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=20,shape=1,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight),colour="dodgerblue") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=20,fill=lightgrey,colour="black") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight),colour="dodgerblue") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=20,fill="lightgrey",colour="black") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight),colour="dodgerblue") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=20.5,colour="black") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=20,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight),colour="dodgerblue") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=21,colour="black") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=20,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight),colour="dodgerblue") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=21.5,colour="black") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=20,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight),colour="dodgerblue") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=22,colour="black") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=20,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight),colour="dodgerblue") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=21,colour="black") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=20,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
obs.sg.all
obs.sg.all<-as.data.frame(fastgreedy.community(obs.spp.all,weights=E(obs.spp.all)$weight))
obs.sg.all<-(fastgreedy.community(obs.spp.all,weights=E(obs.spp.all)$weight)
)
summary(obs.sg.all)
names(obs.sg.all)
fastgreedy.community(obs.spp.all,weights=E(obs.spp.all)$weight)$membership
obs.sg.all<-fastgreedy.community(obs.spp.all,weights=E(obs.spp.all)$weight)
data.frame(obs.sg.all$names,obs.sg.all$membership)
data.frame(species=obs.sg.all$names,group=obs.sg.all$membership)
g
grouping$group[match(g$to,grouping$species)]
grouping<-data.frame(species=obs.sg.all$names,group=obs.sg.all$membership)
g$grp.from<-grouping$group[match(g$to,grouping$species)]
g
g$grp.from<-grouping$group[match(g$from,grouping$species)]
g$grp.to<-grouping$group[match(g$to,grouping$species)]
g
g$grp.type<-ifelse(grp.from==grp.to,1,0)
g$grp.type<-ifelse(g$grp.from==g$grp.to,1,0)
g
save(caught.wide.2,"W:/CreelProject/Manuscripts/1_Active Manuscripts/Co-Occurence/Cooccurrence R Files Networks/caught_wide.RData")
save(caught.wide.2,file="W:/CreelProject/Manuscripts/1_Active Manuscripts/Co-Occurence/Cooccurrence R Files Networks/caught_wide.RData")
library(knitr)
.libPaths("D:/RPackages")
library(knitr)
install.packages("knitr")
ggplot() +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=21,colour="black") +  # adds a black border around the nodes
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=20,colour="lightgrey") +
theme_bw()
library(ggplot2)
ggplot() +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=21,colour="black") +  # adds a black border around the nodes
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=20,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) + # add the node labels
scale_x_continuous(expand=c(0,2))+
theme_bw()  # use the ggplot black and white theme
grouping<-data.frame(species=obs.sg.all$names,group=obs.sg.all$membership)
g$grp.from<-grouping$group[match(g$from,grouping$species)]
g$grp.to<-grouping$group[match(g$to,grouping$species)]
g$grp.type<-ifelse(g$grp.from==g$grp.to,1,0)
g
options(warn = 1,stringsAsFactors = FALSE)
.libPaths("D:/RPackages")
library(knitr)
load("W:/CreelProject/Manuscripts/1_Active Manuscripts/Co-Occurence/Cooccurrence R Files Networks/caught_wide.RData")
head(caught.wide.2)
library(igraph)
caught.inc<-graph.incidence(caught.wide.2,weighted=TRUE) #make data into a bipartite graph object
obs.parties.all<-bipartite.projection(caught.inc)[[1]]
obs.spp.all<-bipartite.projection(caught.inc)[[2]]
op <- par(mfrow=c(1,2))
fr.all<-layout.fruchterman.reingold(obs.spp.all)
plot(obs.spp.all,layout=fr.all,edge.color="black",edge.width=E(obs.spp.all)$weight*0.1,vertex.label=V(obs.spp.all)$name)
obs.sg.all<-fastgreedy.community(obs.spp.all,weights=E(obs.spp.all)$weight)
plot(obs.sg.all, obs.spp.all, layout=fr.all, edge.width=E(obs.spp.all)$weight*0.25, vertex.label=V(obs.spp.all)$name,vertex.label.color="blue")
fr.all.df<-as.data.frame(fr.all)  ## convert the layout to a data.frame
fr.all.df$species<-colnames(caught.wide.2)  ## add in the species codes
g<- get.data.frame(obs.spp.all) # get the edge information using the get.data.frame function
head(g)
g$from.x<-fr.all.df$V1[match(g$from,fr.all.df$species)]  #  match the from locations from the node data.frame we previously connected
g$from.y<-fr.all.df$V2[match(g$from,fr.all.df$species)]
g$to.x<-fr.all.df$V1[match(g$to,fr.all.df$species)] #  match the to locations from the node data.frame we previously connected
g$to.y<-fr.all.df$V2[match(g$to,fr.all.df$species)]
g
grouping<-data.frame(species=obs.sg.all$names,group=obs.sg.all$membership)
g$grp.from<-grouping$group[match(g$from,grouping$species)]
g$grp.to<-grouping$group[match(g$to,grouping$species)]
g$grp.type<-ifelse(g$grp.from==g$grp.to,1,0)
g
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight,linetype=as.factor(grp.type)),colour="dodgerblue") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=21,colour="black") +  # adds a black border around the nodes
geom_point(data=fr.all.df,aes(x=V1,y=V2,colour=as.factor(grp.from)),size=20) +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) + # add the node labels
scale_colour_manual(values=c("1"="red","2"="lightblue"))+
scale_x_continuous(expand=c(0,1))+  # expand the x limits
scale_y_continuous(expand=c(0,1))+ # expand the y limits
theme_bw()+  # use the ggplot black and white theme
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.background = element_blank(),
panel.border =element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_blank())
g
fr.all.df
fr.all.df$grp<-grouping$group[match(fr.all.df$from,grouping$species)]
fr.all.df$grp<-grouping$group[match(fr.all.species,grouping$species)]
fr.all.df$grp<-grouping$group[match(fr.all.df$species,grouping$species)]
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight,linetype=as.factor(grp.type)),colour="dodgerblue") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=21,colour="black") +  # adds a black border around the nodes
geom_point(data=fr.all.df,aes(x=V1,y=V2,colour=as.factor(grp)),size=20) +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) + # add the node labels
scale_colour_manual(values=c("1"="red","2"="lightblue"))+
scale_x_continuous(expand=c(0,1))+  # expand the x limits
scale_y_continuous(expand=c(0,1))+ # expand the y limits
theme_bw()+  # use the ggplot black and white theme
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.background = element_blank(),
panel.border =element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_blank())
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight,linetype=as.factor(grp.type)),colour="dodgerblue") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=21,colour="black") +  # adds a black border around the nodes
geom_point(data=fr.all.df,aes(x=V1,y=V2,colour=as.factor(grp)),size=20,show_guides=FALSE) +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) + # add the node labels
scale_colour_manual(values=c("1"="red","2"="lightblue"))+
scale_x_continuous(expand=c(0,1))+  # expand the x limits
scale_y_continuous(expand=c(0,1))+ # expand the y limits
theme_bw()+  # use the ggplot black and white theme
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.background = element_blank(),
panel.border =element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_blank())
```
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight,linetype=as.factor(grp.type)),colour="dodgerblue") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=21,colour="black") +  # adds a black border around the nodes
geom_point(data=fr.all.df,aes(x=V1,y=V2,colour=as.factor(grp)),size=20,show_guide=FALSE) +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) + # add the node labels
scale_colour_manual(values=c("1"="red","2"="lightblue"))+
scale_x_continuous(expand=c(0,1))+  # expand the x limits
scale_y_continuous(expand=c(0,1))+ # expand the y limits
theme_bw()+  # use the ggplot black and white theme
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.background = element_blank(),
panel.border =element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_blank())
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight,linetype=as.factor(grp.type)),colour="dodgerblue") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=21,colour="black") +  # adds a black border around the nodes
geom_point(data=fr.all.df,aes(x=V1,y=V2,colour=as.factor(grp)),size=20,show_guide=FALSE) +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) + # add the node labels
scale_colour_manual(values=c("1"="red","2"="lightblue"))+
scale_linetype_manual(values=c("0"="solid","1"="dashed"))+
scale_x_continuous(expand=c(0,1))+  # expand the x limits
scale_y_continuous(expand=c(0,1))+ # expand the y limits
theme_bw()+  # use the ggplot black and white theme
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.background = element_blank(),
panel.border =element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_blank())
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight,linetype=as.factor(grp.type)),colour="dodgerblue") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=21,colour="black") +  # adds a black border around the nodes
geom_point(data=fr.all.df,aes(x=V1,y=V2,colour=as.factor(grp)),size=20,show_guide=FALSE) +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) + # add the node labels
scale_colour_manual(values=c("1"="red","2"="lightblue"))+
scale_linetype_manual(values=c("0"="dashed","1"="solid"))+
scale_x_continuous(expand=c(0,1))+  # expand the x limits
scale_y_continuous(expand=c(0,1))+ # expand the y limits
theme_bw()+  # use the ggplot black and white theme
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.background = element_blank(),
panel.border =element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_blank())
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight,linetype=as.factor(grp.type)),colour="dodgerblue") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=21,colour="black") +  # adds a black border around the nodes
geom_point(data=fr.all.df,aes(x=V1,y=V2,colour=as.factor(grp)),size=20,show_guide=FALSE) +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) + # add the node labels
scale_colour_manual(values=c("1"="red","2"="lightblue"))+
scale_linetype_manual(values=c("0"="dashed","1"="solid"),show_guide=FALSE)+
scale_x_continuous(expand=c(0,1))+  # expand the x limits
scale_y_continuous(expand=c(0,1))+ # expand the y limits
theme_bw()+  # use the ggplot black and white theme
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.background = element_blank(),
panel.border =element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_blank())
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight,linetype=as.factor(grp.type)),colour="dodgerblue") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=21,colour="black") +  # adds a black border around the nodes
geom_point(data=fr.all.df,aes(x=V1,y=V2,colour=as.factor(grp)),size=20,show_guide=FALSE) +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) + # add the node labels
scale_colour_manual(values=c("1"="red","2"="lightblue"))+
scale_linetype_manual(values=c("0"="dashed","1"="solid"),show=FALSE)+
scale_x_continuous(expand=c(0,1))+  # expand the x limits
scale_y_continuous(expand=c(0,1))+ # expand the y limits
theme_bw()+  # use the ggplot black and white theme
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.background = element_blank(),
panel.border =element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_blank())
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight,linetype=as.factor(grp.type)),colour="gray") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=21,colour="black") +  # adds a black border around the nodes
geom_point(data=fr.all.df,aes(x=V1,y=V2,colour=as.factor(grp)),size=20,show_guide=FALSE) +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) + # add the node labels
scale_colour_manual(values=c("1"="red","2"="lightblue"))+
scale_linetype_manual(values=c("0"="dashed","1"="solid"))+
scale_x_continuous(expand=c(0,1))+  # expand the x limits
scale_y_continuous(expand=c(0,1))+ # expand the y limits
theme_bw()+  # use the ggplot black and white theme
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.background = element_blank(),
panel.border =element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_blank())
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight,linetype=as.factor(grp.type)),colour="black") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=21,colour="black") +  # adds a black border around the nodes
geom_point(data=fr.all.df,aes(x=V1,y=V2,colour=as.factor(grp)),size=20,show_guide=FALSE) +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) + # add the node labels
scale_colour_manual(values=c("1"="red","2"="lightblue"))+
scale_linetype_manual(values=c("0"="dashed","1"="solid"))+
scale_x_continuous(expand=c(0,1))+  # expand the x limits
scale_y_continuous(expand=c(0,1))+ # expand the y limits
theme_bw()+  # use the ggplot black and white theme
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.background = element_blank(),
panel.border =element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_blank())
g
fr.all.df
?chull
chull(fr.all.df[fr.all.df$grp==1,c("V1","V2")]
chull(fr.all.df[fr.all.df$grp==1,c("V1","V2")])
fr.all.df[fr.all.df$grp==1,c("V1","V2")]
chull(fr.all.df[fr.all.df$grp==1,c("V1","V2")])
grp1<-fr.all.df[chull(fr.all.df[fr.all.df$grp==1,c("V1","V2")])]
grp1<-fr.all.df[chull(fr.all.df[fr.all.df$grp==1,c("V1","V2")]),]
grp1
grp1<-fr.all.df[fr.all.df$grp==1,c("V1","V2")]
grp1
grp1<-fr.all.df[fr.all.df$grp==1,c("V1","V2","grp")]
grp1
-grp1[chull(grp1[,c("V1","V2")]),]
grp1<-fr.all.df[fr.all.df$grp==1,c("V1","V2","grp")]
grp1
chull(grp1[,c("V1","V2")])
grp1[chull(grp1[,c("V1","V2")]),]
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight,linetype=as.factor(grp.type)),colour="black") + # add line type
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=21,colour="black") +  # adds a black border around the nodes
geom_point(data=fr.all.df,aes(x=V1,y=V2,colour=as.factor(grp)),size=20,show_guide=FALSE) +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) + # add the node labels
scale_colour_manual(values=c("1"="red","2"="lightblue"))+  # add colour scaling for group membership
scale_linetype_manual(values=c("0"="dashed","1"="solid"))+ # add linteyp scaling for within and between groups
scale_x_continuous(expand=c(0,1))+  # expand the x limits
scale_y_continuous(expand=c(0,1))+ # expand the y limits
theme_bw()+  # use the ggplot black and white theme
theme(
axis.text.x = element_blank(),  # remove x-axis text
axis.text.y = element_blank(), # remove y-axis text
axis.ticks = element_blank(),  # remove axis ticks
axis.title.x = element_blank(), # remove x-axis labels
axis.title.y = element_blank(), # remove y-axis labels
panel.background = element_blank(),
panel.border =element_blank(),
panel.grid.major = element_blank(),  #remove major-grid labels
panel.grid.minor = element_blank(),  #remove minor-grid labels
plot.background = element_blank())
KnitPost <- function(input, base.url = "/") {
require(knitr)
opts_knit$set(base.url = base.url)
fig.path <- paste0("figs/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
KnitPost("2014-04-04-igraph-ggplotll.Rmd")
setwd("C:/Users/cchizinski2/chrischizinski.github.com/Rmd")
KnitPost("2014-04-04-igraph-ggplotll.Rmd")
