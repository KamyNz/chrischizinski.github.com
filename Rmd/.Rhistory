#              periods = 2,
#              period.probs = c(0.5,0.5),
#              weekdays=0,
#              weekends=2,
#              counts=2,
#              count.length=60,
#              lake.sections = 1,
#              lake.section.probs = NULL,
#              exclude.days = NULL,
#              holidays = c("2014-05-24","2014-05-25","2014-05-26","2014-07-04","2014-07-05","2014-07-06","2014-08-30","2014-08-31","2014-09-01"),
#              sampling.times=data.frame(month=1:12,
#                                        start.period.1=c("08:30","08:00","07:00","07:00","06:30","06:00","06:00","06:30","07:00","08:00","07:30","08:00"),
#                                        start.period.2=c("13:00","13:00","13:00","13:30","13:30","13:30","13:30","13:30","13:30","13:00","12:00","12:30"),
#                                        end=c("17:30","18:00","19:00","20:00","20:30","21:00","21:00","20:30","20:00","19:00","17:30","17:00")),
#              seed=51105110
#
# )
#
# sep.special.qs<-day.within.month.schedule(params,holiday.type = "holiday",add.hour=TRUE)
schedule<-rbind(qs,may.special.qs,july.special.qs)
schedule<-schedule[order(schedule$Date),]
schedule<-reformat.schedule(schedule,lake="Merritt")
sample(c("2014-08-30","2014-08-31","2014-09-01"),1)
sample(c("2014-08-30","2014-08-31","2014-09-01"),2)
schedule
sample(c("2014-08-30","2014-08-31","2014-09-01"),2)
sample(c(1,2),1)
write.csv(schedule,file="W:/CreelProject/CreelSchedules/2014/Merritt_calendar.csv",row.names = FALSE)
params<-list(start.date="2014-05-05",
end.date = "2014-08-31",
periods = 2,
period.probs = c(0.5,0.5),
weekdays=10,
weekends=6,
counts=2,
count.length=60,
lake.sections = 1,
lake.section.probs = NULL,
exclude.days = NULL,
holidays = c("2014-05-24","2014-05-25","2014-05-26","2014-07-04","2014-07-05","2014-07-06","2014-08-30","2014-08-31","2014-09-01"),
sampling.times=data.frame(month=1:12,
start.period.1=c("08:30","08:00","07:00","07:00","06:30","06:00","06:00","06:30","07:00","08:00","07:30","08:00"),
start.period.2=c("13:00","13:00","13:00","13:30","13:30","13:30","13:30","13:30","13:30","13:00","12:00","12:30"),
end=c("17:30","18:00","19:00","20:00","20:30","21:00","21:00","20:30","20:00","19:00","17:30","17:00")),
seed=27802780
)
qs<-day.within.month.schedule(params,holiday.type = "exclude",add.hour=TRUE)
params<-list(start.date="2014-05-01",
end.date = "2014-08-31",
periods = 2,
period.probs = c(0.5,0.5),
weekdays=10,
weekends=6,
counts=2,
count.length=60,
lake.sections = 1,
lake.section.probs = NULL,
exclude.days = NULL,
holidays = c("2014-05-24","2014-05-25","2014-05-26","2014-07-04","2014-07-05","2014-07-06","2014-08-30","2014-08-31","2014-09-01"),
sampling.times=data.frame(month=1:12,
start.period.1=c("08:30","08:00","07:00","07:00","06:30","06:00","06:00","06:30","07:00","08:00","07:30","08:00"),
start.period.2=c("13:00","13:00","13:00","13:30","13:30","13:30","13:30","13:30","13:30","13:00","12:00","12:30"),
end=c("17:30","18:00","19:00","20:00","20:30","21:00","21:00","20:30","20:00","19:00","17:30","17:00")),
seed=27802780
)
params<-list(start.date="2014-05-05",
end.date = "2014-08-31",
periods = 2,
period.probs = c(0.5,0.5),
weekdays=10,
weekends=6,
counts=2,
count.length=60,
lake.sections = 1,
lake.section.probs = NULL,
exclude.days = NULL,
holidays = c("2014-05-24","2014-05-25","2014-05-26","2014-07-04","2014-07-05","2014-07-06","2014-08-30","2014-08-31","2014-09-01"),
sampling.times=data.frame(month=1:12,
start.period.1=c("08:30","08:00","07:00","07:00","06:30","06:00","06:00","06:30","07:00","08:00","07:30","08:00"),
start.period.2=c("13:00","13:00","13:00","13:30","13:30","13:30","13:30","13:30","13:30","13:00","12:00","12:30"),
end=c("17:30","18:00","19:00","20:00","20:30","21:00","21:00","20:30","20:00","19:00","17:30","17:00")),
seed=27802780
)
qs<-day.within.month.schedule(params,holiday.type = "exclude",add.hour=TRUE)
params<-list(start.date="2014-05-01",
end.date = "2014-08-31",
periods = 2,
period.probs = c(0.5,0.5),
weekdays=10,
weekends=6,
counts=2,
count.length=60,
lake.sections = 1,
lake.section.probs = NULL,
exclude.days = NULL,
holidays = c("2014-05-24","2014-05-25","2014-05-26","2014-07-04","2014-07-05","2014-07-06","2014-08-30","2014-08-31","2014-09-01"),
sampling.times=data.frame(month=1:12,
start.period.1=c("08:30","08:00","07:00","07:00","06:30","06:00","06:00","06:30","07:00","08:00","07:30","08:00"),
start.period.2=c("13:00","13:00","13:00","13:30","13:30","13:30","13:30","13:30","13:30","13:00","12:00","12:30"),
end=c("17:30","18:00","19:00","20:00","20:30","21:00","21:00","20:30","20:00","19:00","17:30","17:00")),
seed=27802780
)
qs<-day.within.month.schedule(params,holiday.type = "exclude",add.hour=TRUE)
qs
params<-list(start.date="2014-05-24",
end.date = "2014-05-26",
periods = 2,
period.probs = c(0.5,0.5),
weekdays=0,
weekends=2,
counts=2,
count.length=60,
lake.sections = 1,
lake.section.probs = NULL,
exclude.days = NULL,
holidays = c("2014-05-24","2014-05-25","2014-05-26","2014-07-04","2014-07-05","2014-07-06","2014-08-30","2014-08-31","2014-09-01"),
sampling.times=data.frame(month=1:12,
start.period.1=c("08:30","08:00","07:00","07:00","06:30","06:00","06:00","06:30","07:00","08:00","07:30","08:00"),
start.period.2=c("13:00","13:00","13:00","13:30","13:30","13:30","13:30","13:30","13:30","13:00","12:00","12:30"),
end=c("17:30","18:00","19:00","20:00","20:30","21:00","21:00","20:30","20:00","19:00","17:30","17:00")),
seed=27802780
)
may.special.qs<-day.within.month.schedule(params,holiday.type = "holiday",add.hour=TRUE)
params<-list(start.date="2014-07-04",
end.date = "2014-07-06",
periods = 2,
period.probs = c(0.5,0.5),
weekdays=0,
weekends=2,
counts=2,
count.length=60,
lake.sections = 1,
lake.section.probs = NULL,
exclude.days = NULL,
holidays = c("2014-05-24","2014-05-25","2014-05-26","2014-07-04","2014-07-05","2014-07-06","2014-08-30","2014-08-31","2014-09-01"),
sampling.times=data.frame(month=1:12,
start.period.1=c("08:30","08:00","07:00","07:00","06:30","06:00","06:00","06:30","07:00","08:00","07:30","08:00"),
start.period.2=c("13:00","13:00","13:00","13:30","13:30","13:30","13:30","13:30","13:30","13:00","12:00","12:30"),
end=c("17:30","18:00","19:00","20:00","20:30","21:00","21:00","20:30","20:00","19:00","17:30","17:00")),
seed=27802780
)
july.special.qs<-day.within.month.schedule(params,holiday.type = "holiday",add.hour=TRUE)
schedule<-rbind(qs,may.special.qs,july.special.qs)
schedule<-schedule[order(schedule$Date),]
schedule<-reformat.schedule(schedule,lake="Calamus")
write.csv(schedule,file="W:/CreelProject/CreelSchedules/2014/Calamus_calendar.csv",row.names = FALSE)
schedule
library(plyr)
data(cars)
head(cars)
Puromycin.m <- melt( Puromycin , id=c("state")  )
library(reshape2)
library(plyr)
Puromycin.m <- melt( Puromycin , id=c("state")  )
Puro.models <-  dlply( Puromycin.m , .(variable)  , glm , formula =  state ~ value  ,
family = binomial  )
Puro.models
head(Puromycin)
options(warn = 1,stringsAsFactors = FALSE)
.libPaths("D:/RPackages")
library(igraph)
library(reshape2)
library(plyr)
load("W:/CreelProject/Manuscripts/1_Active Manuscripts/Co-Occurence/Cooccurrence R Files Networks/Seekingdata_03-08-13.RData")
ls()
head(full.data)
full.data$CPUE<-(full.data$N/full.data$num.anglers)/full.data$time.diff_hr
unique(full.data$Lake)
harlan.wildwood<-full.data[full.data$Lake%in%c("Harlan","Wildwood"),]
species<-ddply(harlan.wildwood,.(species),summarize,count=sum(N))
species
harlan.data<-full.data[full.data$Lake%in%c("Harlan"),]
wildwood.data<-full.data[full.data$Lake%in%c("Wildwood"),]
species<-ddply(harlan.data,.(species),summarize,count=sum(N))
species<-species[species$count>1,]
species
soi<-species$species
soi
caught.all<-harlan.data[harlan.data$species %in% soi,]
head(caught.all)
head(full.data)
full.data<-ddply(full.data,.(int.name,Date,num.anglers,time.diff_hr,sp.sought,Lake,species),summarize,N=sum(N))
reduced.data<-full.data[full.data$Lake%in%c("Harlan","Wildwood"),]
reduced.data<-ddply(reduced.data,.(int.name,Date,num.anglers,time.diff_hr,sp.sought,Lake,species),summarize,N=sum(N))
reduced.data.m<-melt(reduced.data,id.var=c("int.name","Date","num.anglers","time.diff_hr","sp.sought","Lake","species",measure.var="N")
)]
reduced.data.m<-melt(reduced.data,id.var=c("int.name","Date","num.anglers","time.diff_hr","sp.sought","Lake","species"),measure.var="N")
reduced.data.2<-dcast(reduced.data.m,int.name+Date,num.anglers+time.diff_hr+sp.sought+Lake+species~variable,sum)
reduced.data.2<-dcast(reduced.data.m,int.name+Date+num.anglers+time.diff_hr+sp.sought+Lake+species~variable,sum)
head(reduced.data.2)
reduced.data.2$CPUE<-(reduced.data.2$N/reduced.data.2$num.anglers)/reduced.data.2$time.diff_hr
harlan.data<-reduced.data.2[reduced.data.2$Lake%in%c("Harlan"),]
wildwood.data<-reduced.data.2[reduced.data.2$Lake%in%c("Wildwood"),]
species<-ddply(harlan.data,.(species),summarize,count=sum(N))
species<-species[species$count>1,]
soi<-species$species
soi
caught.all<-harlan.data[harlan.data$species %in% soi,]
head(caught.all)
caught.all.m<-melt(caught.all,id.var=c(int.name,sp.sought,species),measure.var="CPUE")
caught.all.m<-melt(caught.all,id.var=c("int.name","sp.sought","species"),measure.var="CPUE")
caught.wide<-dcast(caught.all,int.name+sp.sought~species+CPUE)
caught.all.m<-melt(caught.all,id.var=c("int.name","sp.sought","species"),measure.var="CPUE")
caught.wide<-dcast(caught.all.m,int.name+sp.sought~species+CPUE)
caught.wide<-dcast(caught.all.m,int.name+sp.sought~species+variable)
head(caught.wide)
apply(caught.wide[,3:ncol(caught.wide)],2,sum)
apply(caught.wide[,3:ncol(caught.wide)],1,sum)
which(apply(caught.wide[,3:ncol(caught.wide)],1,sum)>0)
caught.wide.1<-caught.wide[which(apply(caught.wide[,3:ncol(caught.wide)],1,sum)>0)]
caught.wide.1<-caught.wide[which(apply(caught.wide[,3:ncol(caught.wide)],1,sum)>0),]
head(caught.wide.1)
soi[soi=="Rainbow Trout"]
soi
soi[soi=="Rainbow trout"]<-"White bass"
species<-ddply(harlan.data,.(species),summarize,count=sum(N))
species<-species[species$count>1,]
soi<-species$species
soi[soi=="Rainbow trout"]<-"White bass"
caught.all<-harlan.data[harlan.data$species %in% soi,]
caught.all$species[caught.all$species=="Bluegill"]<-"BLG"
caught.all$species[caught.all$species=="Channel catfish"]<-"CCF"
caught.all$species[caught.all$species=="Common carp"]<-"COC"
caught.all$species[caught.all$species=="Flathead catfish"]<-"FHC"
caught.all$species[caught.all$species=="Freshwater drum"]<-"FWD"
caught.all$species[caught.all$species=="Largemouth bass"]<-"LMB"
caught.all$species[caught.all$species=="Northern pike"]<-"NOP"
caught.all$species[caught.all$species=="Striped bass hybrid"]<-"HSB"
caught.all$species[caught.all$species=="Flathead catfish"]<-"FHC"
caught.all$species[caught.all$species=="Walleye"]<-"WAE"
caught.all.m<-melt(caught.all,id.var=c("int.name","sp.sought","species"),measure.var="CPUE")
caught.wide<-dcast(caught.all.m,int.name+sp.sought~species+variable)
c
caught.all.m<-melt(caught.all,id.var=c("int.name","sp.sought","species"),measure.var="CPUE")
caught.wide<-dcast(caught.all.m,int.name+sp.sought~species+variable)
caught.wide.1<-caught.wide[which(apply(caught.wide[,3:ncol(caught.wide)],1,sum)>0),]
head(caught.wide.1)
caught.all$species[caught.all$species=="White bas"]<-"WHB"
caught.all.m<-melt(caught.all,id.var=c("int.name","sp.sought","species"),measure.var="CPUE")
caught.wide<-dcast(caught.all.m,int.name+sp.sought~species+variable)
caught.wide.1<-caught.wide[which(apply(caught.wide[,3:ncol(caught.wide)],1,sum)>0),]
head(caught.wide.1)
gsub("_CPUE","",names(caught.wide.1))
names(caught.wide.1)<-gsub("_CPUE","",names(caught.wide.1))
rownames(caught.wide.1)<-caught.wide.1$int.name
caught.wide.2<-caught.wide.1[,-c(1,2)]
head(caught.wide.2)
species<-ddply(harlan.data,.(species),summarize,count=sum(N))
species<-species[species$count>1,]
soi<-species$species
soi[soi=="Rainbow trout"]<-"White bass"
caught.all<-harlan.data[harlan.data$species %in% soi,]
caught.all$species[caught.all$species=="Bluegill"]<-"BLG"
caught.all$species[caught.all$species=="Channel catfish"]<-"CCF"
caught.all$species[caught.all$species=="Common carp"]<-"COC"
caught.all$species[caught.all$species=="Flathead catfish"]<-"FHC"
caught.all$species[caught.all$species=="Freshwater drum"]<-"FWD"
caught.all$species[caught.all$species=="Largemouth bass"]<-"LMB"
caught.all$species[caught.all$species=="Northern pike"]<-"NOP"
caught.all$species[caught.all$species=="Striped bass hybrid"]<-"HSB"
caught.all$species[caught.all$species=="Flathead catfish"]<-"FHC"
caught.all$species[caught.all$species=="Walleye"]<-"WAE"
caught.all$species[caught.all$species=="White bas"]<-"WHB"
caught.all.m<-melt(caught.all,id.var=c("int.name","sp.sought","species"),measure.var="CPUE")
caught.wide<-dcast(caught.all.m,int.name+sp.sought~species+variable)
caught.wide.1<-caught.wide[which(apply(caught.wide[,3:ncol(caught.wide)],1,sum)>0),]
names(caught.wide.1)<-gsub("_CPUE","",names(caught.wide.1))
rownames(caught.wide.1)<-caught.wide.1$int.name
caught.wide.2<-caught.wide.1[,-c(1,2)]
head(caught.wide.2)
caught.all$species[caught.all$species=="White bass"]<-"WHB"
caught.all.m<-melt(caught.all,id.var=c("int.name","sp.sought","species"),measure.var="CPUE")
caught.wide<-dcast(caught.all.m,int.name+sp.sought~species+variable)
caught.wide.1<-caught.wide[which(apply(caught.wide[,3:ncol(caught.wide)],1,sum)>0),]
names(caught.wide.1)<-gsub("_CPUE","",names(caught.wide.1))
rownames(caught.wide.1)<-caught.wide.1$int.name
caught.wide.2<-caught.wide.1[,-c(1,2)]
head(caught.wide.2)
caught.all$species[caught.all$species=="Crappie"]<-"CRP"
caught.all.m<-melt(caught.all,id.var=c("int.name","sp.sought","species"),measure.var="CPUE")
caught.wide<-dcast(caught.all.m,int.name+sp.sought~species+variable)
caught.wide.1<-caught.wide[which(apply(caught.wide[,3:ncol(caught.wide)],1,sum)>0),]
names(caught.wide.1)<-gsub("_CPUE","",names(caught.wide.1))
rownames(caught.wide.1)<-caught.wide.1$int.name
caught.wide.2<-caught.wide.1[,-c(1,2)]
head(caught.wide.2)
caught.wide.2<-as.matrix(caught.wide.1[,-c(1,2)])
head(caught.wide.2)
caught.inc<-graph.incidence(caught.wide.2) #make data into a bipartite graph object
head(caught.inc)
caught.inc
caught.inc<-graph.incidence(caught.wide.2,weighted=TRUE) #make data into a bipartite graph object
caught.inc
caught.inc<-graph.incidence(caught.wide.2,weighted=TRUE) #make data into a bipartite graph object
obs.parties.all<-bipartite.projection(caught.inc)[[1]]
obs.spp.all<-bipartite.projection(caught.inc)[[2]]
obs.spp.all
obs.parties.all
fr.all<-layout.fruchterman.reingold(obs.spp.all)
plot(obs.sg.all, obs.spp.all, layout=fr.all, edge.width=E(obs.spp.all)$weight*0.25, vertex.label=V(obs.spp.all)$name,vertex.label.color="blue")
obs.all.fr<-plot(obs.spp.all,layout=fr,edge.color="black",edge.width=E(obs.spp.all)$weight*0.1,vertex.label=V(obs.spp.all)$name,main="Wildwood All Anglers")
fr.all<-layout.fruchterman.reingold(obs.spp.all)
obs.all.fr<-plot(obs.spp.all,layout=fr.all,edge.color="black",edge.width=E(obs.spp.all)$weight*0.1,vertex.label=V(obs.spp.all)$name,main="Wildwood All Anglers")
obs.all.fr<-plot(obs.spp.all,layout=fr.all,edge.color="black",edge.width=E(obs.spp.all)$weight*0.1,vertex.label=V(obs.spp.all)$name,main="Harlan All Anglers")
obs.sg.all<-fastgreedy.community(obs.spp.all,weights=E(obs.spp.all)$weight)
fr.all<-layout.fruchterman.reingold(obs.spp.all)
plot(obs.sg.all, obs.spp.all, layout=fr.all, edge.width=E(obs.spp.all)$weight*0.25, vertex.label=V(obs.spp.all)$name,vertex.label.color="blue")
g<- get.edgelist(obs.all.fr)
obs.all.fr<-plot(obs.spp.all,layout=fr.all,edge.color="black",edge.width=E(obs.spp.all)$weight*0.1,vertex.label=V(obs.spp.all)$name,main="Harlan All Anglers")
obs.all.fr
str(obs.all.fr)
g<- get.edgelist(obs.spp.all)
g<- as.data.frame(get.edgelist(obs.spp.all))
head(g)
E(obs.spp.all)
E(obs.spp.all)$weight
g<- as.data.frame(E(obs.spp.all))
summary( E(obs.spp.all))
unclass( E(obs.spp.all))
g<- get.data.frame(obs.spp.all)
g
g<- get.data.frame(obs.spp.all,what="both")
g
fr.all
fr.all.df<-as.data.frame(fr.all)
fr.all.df
ggplot() +
geom_point(data=fr.all.df,aes(x=V1,y=V2))
library(ggplot2)
ggplot() +
geom_point(data=fr.all.df,aes(x=V1,y=V2))
head(obs.spp.all)
fr.all.df
bipartite.projection(caught.inc)[[2]]
obs.spp.all
caught.inc
head(caught.wide.2)
fr.all.df$species<-colnames(caught.wide.2)
fr.all.df
source('D:/DataDepot/R/themes.R')
ggplot() +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=10,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_maps()
ggplot() +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=10,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
library(ggplot2)
library(grid)
library(scales)
ggplot() +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=10,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
ggplot() +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=10,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
ggplot() +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=15,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
get.data.frame(obs.spp.all,what="both")
g<- get.data.frame(obs.spp.all)
fr.all.df
g
match[g$from,fr.all.df$species]
fr.all.df$species
g$from
match(g$from,fr.all.df$species)
fr.all.df$V1[match(g$from,fr.all.df$species)]
g$from.x<-fr.all.df$V1[match(g$from,fr.all.df$species)]
g$from.y<-fr.all.df$V2[match(g$from,fr.all.df$species)]
g
g$to.x<-fr.all.df$V1[match(g$to,fr.all.df$species)]
g$to.y<-fr.all.df$V2[match(g$to,fr.all.df$species)]
g
ggplot() +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=15,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y)) +
theme_map()
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y)) +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=15,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
g
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y)) +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=15,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species),size=weight) +
theme_map()
g
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y)) +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=15,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species),size=weight) +
theme_map()
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y)) +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=15,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species,size=weight)) +
theme_map()
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight)) +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=15,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight),colour="grey") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=15,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight),colour="dodgerblue") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=15,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight),colour="dodgerblue") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=20,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight),colour="dodgerblue") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=20,colour="lightgrey") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=20,shape=1,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight),colour="dodgerblue") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=20,fill=lightgrey,colour="black") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight),colour="dodgerblue") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=20,fill="lightgrey",colour="black") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight),colour="dodgerblue") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=20.5,colour="black") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=20,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight),colour="dodgerblue") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=21,colour="black") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=20,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight),colour="dodgerblue") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=21.5,colour="black") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=20,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight),colour="dodgerblue") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=22,colour="black") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=20,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight),colour="dodgerblue") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=21,colour="black") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=20,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
obs.sg.all
obs.sg.all<-as.data.frame(fastgreedy.community(obs.spp.all,weights=E(obs.spp.all)$weight))
obs.sg.all<-(fastgreedy.community(obs.spp.all,weights=E(obs.spp.all)$weight)
)
summary(obs.sg.all)
names(obs.sg.all)
fastgreedy.community(obs.spp.all,weights=E(obs.spp.all)$weight)$membership
obs.sg.all<-fastgreedy.community(obs.spp.all,weights=E(obs.spp.all)$weight)
data.frame(obs.sg.all$names,obs.sg.all$membership)
data.frame(species=obs.sg.all$names,group=obs.sg.all$membership)
g
grouping$group[match(g$to,grouping$species)]
grouping<-data.frame(species=obs.sg.all$names,group=obs.sg.all$membership)
g$grp.from<-grouping$group[match(g$to,grouping$species)]
g
g$grp.from<-grouping$group[match(g$from,grouping$species)]
g$grp.to<-grouping$group[match(g$to,grouping$species)]
g
g$grp.type<-ifelse(grp.from==grp.to,1,0)
g$grp.type<-ifelse(g$grp.from==g$grp.to,1,0)
g
save(caught.wide.2,"W:/CreelProject/Manuscripts/1_Active Manuscripts/Co-Occurence/Cooccurrence R Files Networks/caught_wide.RData")
save(caught.wide.2,file="W:/CreelProject/Manuscripts/1_Active Manuscripts/Co-Occurence/Cooccurrence R Files Networks/caught_wide.RData")
library(knitr)
.libPaths("D:/RPackages")
library(knitr)
install.packages("knitr")
.libPaths("D:/RPackages")
install.packages("installr"); require(installr)
updateR()
KnitPost <- function(input, base.url = "/") {
require(knitr)
opts_knit$set(base.url = base.url)
fig.path <- paste0("figs/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
setwd("C:/Users/cchizinski2/chrischizinski.github.com/Rmd")
KnitPost("2014-04-13-vegan-ggplot2.Rmd")
