fr.all.df
source('D:/DataDepot/R/themes.R')
ggplot() +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=10,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_maps()
ggplot() +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=10,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
library(ggplot2)
library(grid)
library(scales)
ggplot() +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=10,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
ggplot() +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=10,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
ggplot() +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=15,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
get.data.frame(obs.spp.all,what="both")
g<- get.data.frame(obs.spp.all)
fr.all.df
g
match[g$from,fr.all.df$species]
fr.all.df$species
g$from
match(g$from,fr.all.df$species)
fr.all.df$V1[match(g$from,fr.all.df$species)]
g$from.x<-fr.all.df$V1[match(g$from,fr.all.df$species)]
g$from.y<-fr.all.df$V2[match(g$from,fr.all.df$species)]
g
g$to.x<-fr.all.df$V1[match(g$to,fr.all.df$species)]
g$to.y<-fr.all.df$V2[match(g$to,fr.all.df$species)]
g
ggplot() +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=15,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y)) +
theme_map()
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y)) +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=15,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
g
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y)) +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=15,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species),size=weight) +
theme_map()
g
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y)) +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=15,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species),size=weight) +
theme_map()
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y)) +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=15,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species,size=weight)) +
theme_map()
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight)) +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=15,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight),colour="grey") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=15,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight),colour="dodgerblue") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=15,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight),colour="dodgerblue") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=20,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight),colour="dodgerblue") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=20,colour="lightgrey") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=20,shape=1,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight),colour="dodgerblue") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=20,fill=lightgrey,colour="black") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight),colour="dodgerblue") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=20,fill="lightgrey",colour="black") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight),colour="dodgerblue") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=20.5,colour="black") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=20,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight),colour="dodgerblue") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=21,colour="black") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=20,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight),colour="dodgerblue") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=21.5,colour="black") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=20,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight),colour="dodgerblue") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=22,colour="black") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=20,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
ggplot() +
geom_segment(data=g,aes(x=from.x,xend = to.x, y=from.y,yend = to.y,size=weight),colour="dodgerblue") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=21,colour="black") +
geom_point(data=fr.all.df,aes(x=V1,y=V2),size=20,colour="lightgrey") +
geom_text(data=fr.all.df,aes(x=V1,y=V2,label=species)) +
theme_map()
obs.sg.all
obs.sg.all<-as.data.frame(fastgreedy.community(obs.spp.all,weights=E(obs.spp.all)$weight))
obs.sg.all<-(fastgreedy.community(obs.spp.all,weights=E(obs.spp.all)$weight)
)
summary(obs.sg.all)
names(obs.sg.all)
fastgreedy.community(obs.spp.all,weights=E(obs.spp.all)$weight)$membership
obs.sg.all<-fastgreedy.community(obs.spp.all,weights=E(obs.spp.all)$weight)
data.frame(obs.sg.all$names,obs.sg.all$membership)
data.frame(species=obs.sg.all$names,group=obs.sg.all$membership)
g
grouping$group[match(g$to,grouping$species)]
grouping<-data.frame(species=obs.sg.all$names,group=obs.sg.all$membership)
g$grp.from<-grouping$group[match(g$to,grouping$species)]
g
g$grp.from<-grouping$group[match(g$from,grouping$species)]
g$grp.to<-grouping$group[match(g$to,grouping$species)]
g
g$grp.type<-ifelse(grp.from==grp.to,1,0)
g$grp.type<-ifelse(g$grp.from==g$grp.to,1,0)
g
save(caught.wide.2,"W:/CreelProject/Manuscripts/1_Active Manuscripts/Co-Occurence/Cooccurrence R Files Networks/caught_wide.RData")
save(caught.wide.2,file="W:/CreelProject/Manuscripts/1_Active Manuscripts/Co-Occurence/Cooccurrence R Files Networks/caught_wide.RData")
library(knitr)
.libPaths("D:/RPackages")
library(knitr)
install.packages("knitr")
.libPaths("D:/RPackages")
install.packages("installr"); require(installr)
updateR()
library(tools)
?getBibstyle
getBibstyle(all = TRUE)
options(warn = 1,stringsAsFactors = FALSE)
.libPaths("D:/RPackages")
library(bibtex)
install.packages("bibtex")
library(bibtex)
bibstyle("apasoft",.init = TRUE)
getBibstyle(all=TRUE)
refs <-
c(bibentry(bibtype = "manual",
title = "R: A Language and Environment for Statistical Computing",
author = person("R Core Team"),
organization = "R Foundation for Statistical Computing",
address = "Vienna, Austria",
year = 2013,
url = "http://www.R-project.org"),
bibentry(bibtype = "article",
author = c(person(c("George", "E.", "P."), "Box"),
person(c("David",  "R."),      "Cox")),
year = 1964,
title = "An Analysis of Transformations",
journal = "Journal of the Royal Statistical Society, Series B",
volume = 26,
pages = "211-252"))
bibstyle("unsorted", sortKeys = function(refs) seq_along(refs),
fmtPrefix = function(paper) paste0("[", paper$.index, "]"),
.init = TRUE)
print(refs, .bibstyle = "unsorted")
str(refs)
.libPaths("D:/RPackages")
?update.packages
update.packages(lib.loc="D:/RPackages")
options(warn = 1,stringsAsFactors = FALSE)
.libPaths("D:/RPackages")
source('D:/R/themes.r')
install.packages(c("adehabitatLT", "agricolae", "ape", "evaluate", "GGally", "ggplot2", "gtools", "igraph", "installr", "klaR", "knitr", "leafletR", "lsmeans", "maps", "maptools", "markdown", "Matrix", "memoise", "multcomp", "mvtnorm", "polyclip", "Rcpp", "RcppArmadillo", "RcppEigen", "reshape", "reshape2", "rgeos", "rjson", "RJSONIO", "robustbase", "scales", "segmented", "spatstat", "stringdist", "tm", "unmarked"))
library(vegan)
?oridsurf
?ordisurf
options(warn = 1,stringsAsFactors = FALSE)
.libPaths("D:/RPackages")
library(ggplot2)
library(vegan)
data(dune)
head(dune)
ord <- metaMDS(dune)
ord
plot(ord, type = "n")
points(ord, display = "sites", cex = 1, pch=16, col="red")
text(ord, display = "species", cex=1, col="blue")
ordisurf(ord, A1, add=TRUE,data=dune.env)
head(dune.env)
data(dune.env)
head(dune.env)
ordisurf(ord, A1, add=TRUE,data=dune.env)
ordisurf(ord, dune.env$A1, add=TRUE)
dune.scores<-as.data.frame(scores(dune))
dune.scores$site<-rownames(dune.scores)
names(dune.scores)[c(1,2)]<-c("x","y")
dune.scores$z<-NA
dune.scores
dune.scores<-as.data.frame(scores(ord))
dune.scores$site<-rownames(dune.scores)
names(dune.scores)[c(1,2)]<-c("x","y")
dune.scores$z<-NA
dune.scores
species.scores<-as.data.frame(scores(ord,"species"))
species.scores$species<-rownames(species.scores)
names(species.scores)[c(1,2)]<-c("x","y")
species.scores$z<-NA
species.scores
set.seed(123456)
dune.sf <- ordisurf(dune ~ dune.env$A1, plot = FALSE, scaling = 3)
head(dune.sf)
dune.scores<-as.data.frame(scores(ord))
dune.scores$site<-rownames(dune.scores)
names(dune.scores)[c(1,2)]<-c("x","y")
dune.scores$z<-NA
species.scores<-as.data.frame(scores(ord,"species"))
species.scores$species<-rownames(species.scores)
names(species.scores)[c(1,2)]<-c("x","y")
species.scores$z<-NA
dune.sf <- ordisurf(dune ~ dune.env$A1, plot = FALSE, scaling = 3)
dune.sf <- ordisurf(ord ~ dune.env$A1, plot = FALSE, scaling = 3)
head(dune.sf)
extract.xyz<-function(obj){
xy<-expand.grid(x=obj$grid$x,y=obj$grid$y)
xyz<-cbind(xy,c(obj$grid$z))
names(xyz)<-c("x","y","z")
return(xyz)
}
contour.vals<-extract.xyz(obj=lake.sf)
head(contour.vals)
contour.vals<-extract.xyz(obj=dune.sf)
head(contour.vals)
ggplot()+
geom_text(data=species.scores,aes(x=x,y=y,label=species),colour="red")+
coord_equal()+
theme_mine()+
labs(x= "NMDS1",y="NMDS2")+
theme(panel.border =element_rect(fill=NA),
axis.text.x = element_blank(),
axis.text.y = element_blank())
source('W:/CreelProject/RFiles/themes.r')
ggplot() +
geom_text(data=species.scores,aes(x=x,y=y,label=species),colour="red") +
coord_equal() +
theme_mine() +
labs(x= "NMDS1",y="NMDS2") +
theme(panel.border =element_rect(fill=NA),
axis.text.x = element_blank(),
axis.text.y = element_blank())
library(scales)
ggplot() +
geom_text(data=species.scores,aes(x=x,y=y,label=species),colour="red") +
coord_equal() +
theme_mine() +
labs(x= "NMDS1",y="NMDS2") +
theme(panel.border =element_rect(fill=NA),
axis.text.x = element_blank(),
axis.text.y = element_blank())
library(grid)
ggplot() +
geom_text(data=species.scores,aes(x=x,y=y,label=species),colour="red") +
coord_equal() +
theme_mine() +
labs(x= "NMDS1",y="NMDS2") +
theme(panel.border =element_rect(fill=NA),
axis.text.x = element_blank(),
axis.text.y = element_blank())
p<-ggplot(data=contour.vals, aes(x, y, z = z))+
stat_contour(aes(colour = ..level..))
p
p<-ggplot(data=contour.vals, aes(x, y, z = z))+
stat_contour(aes(colour = ..level..)) +
theme_mine()
p<-ggplot(data=contour.vals, aes(x, y, z = z))+
stat_contour(aes(colour = ..level..)) +
theme_mine()
print(p)
p +
geom_text(data=species.scores,aes(x=x,y=y,label=species),colour="red") +
ggplot(data=contour.vals, aes(x, y, z = z))+
stat_contour(aes(colour = ..level..))
coord_equal() +
theme_mine() +
labs(x= "NMDS1",y="NMDS2") +
theme(panel.border =element_rect(fill=NA),
axis.text.x = element_blank(),
axis.text.y = element_blank())
p +
geom_text(data=species.scores,aes(x=x,y=y,label=species),colour="red")
p +
geom_text(data=species.scores,aes(x=x,y=y,label=species),colour="red") +
coord_equal() +
theme_mine() +
labs(x= "NMDS1",y="NMDS2") +
theme(panel.border =element_rect(fill=NA),
axis.text.x = element_blank(),
axis.text.y = element_blank())
p +
geom_text(data=species.scores,aes(x=x,y=y,label=species),colour="red") +
coord_equal() +
theme_mine() +
labs(x= "NMDS1",y="NMDS2") +
theme(panel.border =element_rect(fill=NA),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
legend.position="none")
library(directlabels)
directlabel(p)
direct.label(p)
p<- p +
geom_text(data=species.scores,aes(x=x,y=y,label=species),colour="red") +
coord_equal() +
theme_mine() +
labs(x= "NMDS1",y="NMDS2") +
theme(panel.border =element_rect(fill=NA),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
legend.position="none")
library(directlabels)
direct.label(p)
?direct.label
p<- p +
geom_text(data=species.scores,aes(x=x,y=y,label=species),colour="red") +
coord_equal() +
theme_mine()
p<-ggplot(data=contour.vals, aes(x, y, z = z))+
stat_contour(aes(colour = ..level..)) +
theme_mine()
p<- p +
geom_text(data=species.scores,aes(x=x,y=y,label=species),colour="red") +
coord_equal() +
theme_mine()
p
labelz<-data.frame(x=c(-0.6,-0.55,-0.45,-0.05,0.25,0.55,0.85),
y=c(0.05,1,1,1,0.95,0.75,0.65),
labels=c(3.5,4,4.5,5,5.5,6,6.5))
p +
geom_text(data=labelz,aes(x=x,y=y,labels=labels),size=12)
labelz<-data.frame(x=c(-0.6,-0.55,-0.45,-0.05,0.25,0.55,0.85),
y=c(0.05,1,1,1,0.95,0.75,0.65),
z=NA,
labels=c(3.5,4,4.5,5,5.5,6,6.5))
p +
geom_text(data=labelz,aes(x=x,y=y,labels=labels),size=12)
p +
geom_text(data=labelz,aes(x=x,y=y,label=labels),size=12)
labelz<-data.frame(x=c(-0.75,-0.55,-0.45,-0.05,0.25,0.55,0.85),
y=c(0.05,1,1,1,0.95,0.75,0.65),
z=NA,
labels=c(3.5,4,4.5,5,5.5,6,6.5))
p +
geom_text(data=labelz,aes(x=x,y=y,label=labels),size=12)
labelz<-data.frame(x=c(-0.85,-0.55,-0.45,-0.05,0.25,0.55,0.85),
y=c(0.05,1,1,1,0.95,0.75,0.65),
z=NA,
labels=c(3.5,4,4.5,5,5.5,6,6.5))
p +
geom_text(data=labelz,aes(x=x,y=y,label=labels),size=12)
labelz<-data.frame(x=c(-0.85,-0.75,-0.45,-0.05,0.25,0.55,0.85),
y=c(0.05,1,1,1,0.95,0.75,0.65),
z=NA,
labels=c(3.5,4,4.5,5,5.5,6,6.5))
p +
geom_text(data=labelz,aes(x=x,y=y,label=labels),size=12)
labelz<-data.frame(x=c(-0.85,-0.78,-0.45,-0.05,0.25,0.55,0.85),
y=c(0.05,1,1,1,0.95,0.75,0.65),
z=NA,
labels=c(3.5,4,4.5,5,5.5,6,6.5))
p +
geom_text(data=labelz,aes(x=x,y=y,label=labels),size=12)
labelz<-data.frame(x=c(-0.85,-0.80,-0.45,-0.05,0.25,0.55,0.85),
y=c(0.05,1,1,1,0.95,0.75,0.65),
z=NA,
labels=c(3.5,4,4.5,5,5.5,6,6.5))
p +
geom_text(data=labelz,aes(x=x,y=y,label=labels),size=12)
labelz<-data.frame(x=c(-0.85,-0.80,-0.45,-0.05,0.25,0.55,0.85),
y=c(0.05,1,1,1,0.95,0.75,0.65),
z=NA,
labels=c(3.5,4.0,4.5,5.0,5.5,6.0,6.5))
p +
geom_text(data=labelz,aes(x=x,y=y,label=labels),size=12)
labelz<-data.frame(x=c(-0.85,-0.80,-0.45,-0.05,0.25,0.55,0.85),
y=c(0.05,1,1,1,0.95,0.75,0.65),
z=NA,
labels=c(3.5,4.0,4.5,5.0,5.5,6.0,6.5))
p +
geom_text(data=labelz,aes(x=x,y=y,label=labels),size=12)
labelz<-data.frame(x=c(-0.85,-0.80,-0.45,-0.05,0.25,0.55,0.85),
y=c(0.05,1,1,1,0.95,0.75,0.65),
z=NA,
labels=c(3.5,4.0,4.5,5.0,5.5,6.0,6.5))
labelz<-data.frame(x=c(-0.85,-0.80,-0.45,-0.05,0.25,0.55,0.85),
y=c(0.05,1,1,1,0.95,0.75,0.65),
z=NA,
labels=c('3.5','4.0','4.5','5.0','5.5','6.0','6.5'))
p +
geom_text(data=labelz,aes(x=x,y=y,label=labels),size=12)
labelz<-data.frame(x=c(-0.85,-0.80,-0.55,-0.05,0.25,0.55,0.85),
y=c(0.05,1,1,1,0.95,0.75,0.65),
z=NA,
labels=c('3.5','4.0','4.5','5.0','5.5','6.0','6.5'))
p +
geom_text(data=labelz,aes(x=x,y=y,label=labels),size=12)
labelz<-data.frame(x=c(-0.85,-0.80,-0.45,-0.15,0.25,0.55,0.85),
y=c(0.05,1,1,1,0.95,0.75,0.65),
z=NA,
labels=c('3.5','4.0','4.5','5.0','5.5','6.0','6.5'))
p +
geom_text(data=labelz,aes(x=x,y=y,label=labels),size=12)
labelz<-data.frame(x=c(-0.85,-0.80,-0.45,-0.15,0.25,0.55,0.85),
y=c(0.05,1,1,1,0.95,0.75,0.65),
z=NA,
labels=c('3.5','4.0','4.5','5.0','5.5','6.0','6.5'))
p +
geom_text(data=labelz,aes(x=x,y=y,label=labels),size=8)
labelz<-data.frame(x=c(-0.85,-0.80,-0.45,-0.15,0.20,0.55,0.85),
y=c(0.05,1,1,1,0.95,0.75,0.65),
z=NA,
labels=c('3.5','4.0','4.5','5.0','5.5','6.0','6.5'))
p +
geom_text(data=labelz,aes(x=x,y=y,label=labels),size=8)
labelz<-data.frame(x=c(-0.85,-0.80,-0.45,-0.15,0.15,0.55,0.85),
y=c(0.05,1,1,1,0.95,0.75,0.65),
z=NA,
labels=c('3.5','4.0','4.5','5.0','5.5','6.0','6.5'))
p +
geom_text(data=labelz,aes(x=x,y=y,label=labels),size=8)
labelz<-data.frame(x=c(-0.85,-0.80,-0.45,-0.15,0.15,0.50,0.85),
y=c(0.05,1,1,1,0.95,0.75,0.65),
z=NA,
labels=c('3.5','4.0','4.5','5.0','5.5','6.0','6.5'))
p +
geom_text(data=labelz,aes(x=x,y=y,label=labels),size=8)
labelz<-data.frame(x=c(-0.85,-0.80,-0.45,-0.15,0.15,0.50,0.85),
y=c(0.05,1.1,1.1,1.1,1,0.75,0.65),
z=NA,
labels=c('3.5','4.0','4.5','5.0','5.5','6.0','6.5'))
p +
geom_text(data=labelz,aes(x=x,y=y,label=labels),size=8)
p +
geom_text(data=labelz,aes(x=x,y=y,label=labels),angle=85,size=8)
p +
geom_text(data=labelz,aes(x=x,y=y,label=labels),angle=-85,size=8)
p +
geom_text(data=labelz,aes(x=x,y=y,label=labels),angle=-88,size=8)
p +
geom_text(data=labelz,aes(x=x,y=y,label=labels),angle=-80,size=8)
p +
geom_text(data=labelz,aes(x=x,y=y,label=labels),angle=-80,size=2)
p +
geom_text(data=labelz,aes(x=x,y=y,label=labels),angle=-80,size=4)
p +
geom_text(data=labelz,aes(x=x,y=y,label=labels),angle=-80,size=6)
plot(ord, type = "n")
points(ord, display = "sites", cex = 1, pch=16, col="red")
text(ord, display = "species", cex=1, col="blue")
ordisurf(ord, dune.env$A1, add=TRUE)
p<-ggplot(data=contour.vals, aes(x, y, z = z))+
stat_contour(aes(colour = ..level..)) +
coord_cartesian(xlim=c(-2,2),ylim=c(-1,1.5))
theme_mine()
print(p)
p<- p +
geom_text(data=species.scores,aes(x=x,y=y,label=species),colour="red") +
coord_equal() +
theme_mine() +
labs(x= "NMDS1",y="NMDS2") +
theme(panel.border =element_rect(fill=NA),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
legend.position="none")
print(p)
KnitPost <- function(input, base.url = "/") {
require(knitr)
opts_knit$set(base.url = base.url)
fig.path <- paste0("figs/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
setwd("C:/Users/cchizinski2/chrischizinski.github.com/_posts")
KnitPost("2014-06-30-oridisurf-ggplot.Rmd")
